---
heat_template_version: 2016-04-08

description:
  A simple router (VPC in OTC) with net and subnet

parameters:

  prefix:
    type: string
    description: >
      The name of the network to create
    default: otc-

  external_network:
    type: string
    description: >
      The external network that provides floating IP addresses for the nodes
    default: admin_external_net
    constraints:
    - custom_constraint: neutron.network

  subnet_cidr:
    type: string
    description: >
      The subnet used for instance to instance communication
    default: 192.168.178.0/24

  dns_nameservers:
    type: comma_delimited_list
    description: Addresses of a dns nameserver reachable in your environment
    default: ['100.125.4.25', '8.8.8.8']

resources:

  router:
    type: OS::Neutron::Router
    properties:
      name:
        str_replace:
          template: "_prefix_router"
          params:
            "_prefix_": { get_param: prefix }
      external_gateway_info:
        enable_snat: true
        network: { get_param: external_network}

  # Network Components
  net:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: "_prefix_network"
          params:
            "_prefix_": { get_param: prefix }

  subnet:
    type: OS::Neutron::Subnet
    depends_on: net
    properties:
      cidr: { get_param: subnet_cidr }
      network: { get_resource: net }
      dns_nameservers: { get_param: dns_nameservers }
      name:
        str_replace:
          template: "_prefix_subnet"
          params:
            "_prefix_": { get_param: prefix }

  router_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ subnet, router ]
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet }


outputs:
  OS::stack_id:
    value: { get_resource: router }

  router:
    description: Router (VPC)
    value: { get_resource: router }

  network:
    description: The network that carries the VPC traffic
    value: { get_resource: net }

  subnet:
    description: The subnet that carries the VPC traffic
    value: { get_resource: subnet }
